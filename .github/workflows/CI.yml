name: CI
on:
  pull_request:
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1'
          - '1.9.0'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
          - x86
        exclude:
          - os: macOS-latest
            arch: x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: dev TypedSyntax
        shell: julia --color=yes --project=. {0}    # this is necessary for the next command to work on Windows
        run: 'using Pkg; Pkg.develop(path=joinpath(pwd(), "TypedSyntax"))'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          check_bounds: 'auto'
          coverage: 'false'
      - name: TypedSyntax     # run the tests of TypedSyntax (a subdir package)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: julia --project=TypedSyntax -e 'using Pkg; Pkg.test(coverage=true)'
      # - name: Coverage off  # `empty_func` test doesn't work as intended with `coverage=true`
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: julia --project -e 'using Pkg; Pkg.test("Cthulhu"; coverage=false)'
      # - name: Bounds/DCE check
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   run: julia --project --code-coverage -e 'using Pkg; Pkg.add(["DeepDiffs", "PerformanceTestTools", "Revise", "StaticArrays"]); cd("test"); include("runtests.jl")'
      # - uses: julia-actions/julia-processcoverage@v1
      # - uses: codecov/codecov-action@v1
      #   with:
      #     file: lcov.info
