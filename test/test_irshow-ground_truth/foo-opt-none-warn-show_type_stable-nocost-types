Body[91m[1m::Any[22m[39m
[90m1 â”€â”€[39m %1  = Core.Box[36m::Core.Const(Core.Box)[39m
[90mâ”‚   [39m %2  = %new(%1)[91m[1m::Core.Box[22m[39m
[90mâ”‚   [39m %3  = Base.add_int(_2, _3)[36m::Int64[39m
[90mâ”‚   [39m       Core.setfield!(%2, :contents, %3)
[90mâ”‚   [39m %5  = Core.isdefined(%2, :contents)[36m::Bool[39m
[90mâ””â”€â”€â”€[39m       goto #3 if not %5
[90m2 â”€â”€[39m       goto #4
[90m3 â”€â”€[39m       $(Expr(:throw_undef_if_not, :z, false))
[90m4 â”„â”€[39m %9  = Core.getfield(%2, :contents)[91m[1m::Any[22m[39m
[90mâ”‚   [39m %10 = (%9 < 4)[91m[1m::Any[22m[39m
[90mâ””â”€â”€â”€[39m       goto #9 if not %10
[90m5 â”€â”€[39m %12 = Core.isdefined(%2, :contents)[36m::Bool[39m
[90mâ””â”€â”€â”€[39m       goto #7 if not %12
[90m6 â”€â”€[39m       goto #8
[90m7 â”€â”€[39m       $(Expr(:throw_undef_if_not, :z, false))
[90m8 â”„â”€[39m %16 = Core.getfield(%2, :contents)[91m[1m::Any[22m[39m
[90mâ”‚   [39m %17 = (%16 + 1)[91m[1m::Any[22m[39m
[90mâ””â”€â”€â”€[39m       Core.setfield!(%2, :contents, %17)
[90m9 â”„â”€[39m %19 = %new(Main.anonymous.:(var"#1#2"), %2)[36m::Main.anonymous.var"#1#2"[39m
[90mâ”‚   [39m %20 = invoke %19(_2::Int64)[91m[1m::Any[22m[39m
[90mâ”‚   [39m %21 = (isa)(_2, Missing)[36m::Bool[39m
[90mâ””â”€â”€â”€[39m       goto #11 if not %21
[90m10 â”€[39m       goto #14
[90m11 â”€[39m %24 = (isa)(_2, Int64)[36m::Bool[39m
[90mâ””â”€â”€â”€[39m       goto #13 if not %24
[90m12 â”€[39m %26 = Base.add_int(_2, _3)[36m::Int64[39m
[90mâ””â”€â”€â”€[39m       goto #14
[90m13 â”€[39m       Core.throw(ErrorException("fatal error in type inference (type bound)"))
[90mâ””â”€â”€â”€[39m       unreachable
[90m14 â”„[39m %30 = Ï† (#10 => $(QuoteNode(missing)), #12 => %26)[33m[1m::Union{Missing, Int64}[22m[39m
[90mâ”‚   [39m %31 = (%20 + %30)[91m[1m::Any[22m[39m
[90mâ””â”€â”€â”€[39m       return %31
