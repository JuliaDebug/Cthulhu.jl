â”‚ â”€ %-1  = invoke foo(::Int64,::Int64)::Any
[90m[72Gâ”‚â•» Box[1G[39m[90m2 [39m[0m1 â”€â”€[32m    0[39m %1  = Core.Box
[90m[72Gâ”‚â”‚[1G[39m[90m  [39m[0mâ”‚   [32m    0[39m %2  = %new(%1)
[90m[72Gâ”‚â•» +[1G[39m[90m  [39m[0mâ”‚   [32m    1[39m %3  = Base.add_int(_2, _3)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ”‚   [32m    3[39m       Core.setfield!(%2, :contents, %3)
[90m[72Gâ”‚ [1G[39m[90m3 [39m[0mâ”‚   [32m    1[39m %5  = Core.isdefined(%2, :contents)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       goto #3 if not %5
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m2 â”€â”€[32m    0[39m       goto #4
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m3 â”€â”€[32m    0[39m       $(Expr(:throw_undef_if_not, :z, false))
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m4 â”„â”€[32m    0[39m %9  = Core.getfield(%2, :contents)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ”‚   [32m 1000[39m %10 = (%9 < 4)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       goto #9 if not %10
[90m[72Gâ”‚ [1G[39m[90m4 [39m[0m5 â”€â”€[32m    1[39m %12 = Core.isdefined(%2, :contents)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       goto #7 if not %12
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m6 â”€â”€[32m    0[39m       goto #8
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m7 â”€â”€[32m    0[39m       $(Expr(:throw_undef_if_not, :z, false))
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m8 â”„â”€[32m    0[39m %16 = Core.getfield(%2, :contents)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ”‚   [32m 1000[39m %17 = (%16 + 1)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    3[39m       Core.setfield!(%2, :contents, %17)
[90m[72Gâ”‚ [1G[39m[90m6 [39m[0m9 â”„â”€[32m    0[39m %19 = %new(Main.anonymous.:(var"#1#2"), %2)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ”‚   [32m   20[39m %20 = invoke %19(_2::Int64)
[90m[72Gâ”‚ [1G[39m[90m7 [39m[0mâ”‚   [32m    1[39m %21 = (isa)(_2, Missing)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       goto #11 if not %21
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m10 â”€[32m    0[39m       goto #14
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m11 â”€[32m    1[39m %24 = (isa)(_2, Int64)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       goto #13 if not %24
[90m[72Gâ”‚â•» +[1G[39m[90m  [39m[0m12 â”€[32m    1[39m %26 = Base.add_int(_2, _3)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       goto #14
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m13 â”€[32m    0[39m       Core.throw(ErrorException("fatal error in type inference (type bound)"))
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       unreachable
[90m[72Gâ”‚ [1G[39m[90m  [39m[0m14 â”„[32m    0[39m %30 = Ï† (#10 => $(QuoteNode(missing)), #12 => %26)
[90m[72Gâ”‚ [1G[39m[90m8 [39m[0mâ”‚   [32m 1000[39m %31 = (%20 + %30)
[90m[72Gâ”‚ [1G[39m[90m  [39m[0mâ””â”€â”€â”€[32m    0[39m       return %31
[90m[72G  [1G[39m[90m  [39m